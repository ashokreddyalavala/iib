

CREATE COMPUTE MODULE CREATEACCOUNT_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		IF COALESCE(InputRoot.XMLNSC.CreateAccountRequest.FirstName,'')='' THEN
			SET OutputRoot.XMLNSC.CreateAccountResponse.Code	=	'E001';
			SET OutputRoot.XMLNSC.CreateAccountResponse.Message	=	'FirstName is Empty';
			RETURN TRUE;
		END IF;
		IF COALESCE(InputRoot.XMLNSC.CreateAccountRequest.LastName,'')='' THEN
			SET OutputRoot.XMLNSC.CreateAccountResponse.Code	=	'E002';
			SET OutputRoot.XMLNSC.CreateAccountResponse.Message	=	'LastName is Empty';
			RETURN TRUE;
		END IF;
		IF COALESCE(InputRoot.XMLNSC.CreateAccountRequest.PANNumber,'')='' THEN
			SET OutputRoot.XMLNSC.CreateAccountResponse.Code	=	'E003';
			SET OutputRoot.XMLNSC.CreateAccountResponse.Message	=	'PAN Number is Empty';
			RETURN TRUE;
		END IF;
		IF COALESCE(InputRoot.XMLNSC.CreateAccountRequest.Address,'')='' THEN
			SET OutputRoot.XMLNSC.CreateAccountResponse.Code	=	'E004';
			SET OutputRoot.XMLNSC.CreateAccountResponse.Message	=	'Invalid Address';
			RETURN TRUE;
		END IF;
		
		SET OutputRoot.XMLNSC.CreateAccountResponse.Code	=	'00';
		SET OutputRoot.XMLNSC.CreateAccountResponse.Message	=	'Account created successfully';
		SET OutputRoot.XMLNSC.CreateAccountResponse.AccountNumber	=	CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'ddMMyyyyHHmmsss');
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
