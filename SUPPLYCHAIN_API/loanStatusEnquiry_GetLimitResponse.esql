

CREATE COMPUTE MODULE loanStatusEnquiry_GetLimitResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		CREATE LASTCHILD OF Environment.Variables.GetLimitResp DOMAIN 'JSON' PARSE(InputRoot.BLOB.BLOB);
		IF Environment.Variables.GetLimitResp.JSON.Data.status='SUCCESS' THEN
			SET Environment.Variables.GlobalLimit=COALESCE(Environment.Variables.GetLimitResp.JSON.Data.anchorLimits.Item.value,Environment.Variables.GetLimitResp.JSON.Data.globalLimit.value);
			RETURN FALSE;			
		ELSE 
			SET Environment.Variables.Logging.LogType='LogOut';
			CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
			SET OutputRoot.JSON.Data.ResponseCode		=	'2001';
			SET OutputRoot.JSON.Data.ResponseMessage	=	COALESCE(Environment.Variables.GetLimitResp.JSON.Data.message,'Unable to process the request');
			SET OutputRoot.JSON.Data.ReferenceId		=	Environment.Variables.Logging.ReferenceId;
			SET Environment.TerminateFlow	=	TRUE;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
