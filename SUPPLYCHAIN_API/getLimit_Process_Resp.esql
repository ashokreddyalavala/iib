

CREATE COMPUTE MODULE getLimit_Process_Resp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET Environment.Variables.Logging.LogType='LogOut';
		CREATE LASTCHILD OF Environment.Variables.GetLimitResp DOMAIN 'JSON' PARSE(InputRoot.BLOB.BLOB);
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		IF Environment.Variables.GetLimitResp.JSON.Data.status='SUCCESS' THEN
			SET OutputRoot.JSON.Data.ResponseCode							=	'00';
			SET OutputRoot.JSON.Data.ResponseMessage						=	'Success';
			SET OutputRoot.JSON.Data.ReferenceId							=	Environment.Variables.Logging.ReferenceId;
			IF EXISTS(Environment.Variables.GetLimitResp.JSON.Data.anchorLimits.Item[]) THEN
				CREATE FIELD OutputRoot.JSON.Data.AnchorLimits IDENTITY (JSON.Array);
				DECLARE i INTEGER 1;
				FOR SOURCE AS Environment.Variables.GetLimitResp.JSON.Data.anchorLimits.Item[] DO
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].CurrencyCode=SOURCE.currencyCode;
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].Limit=SOURCE.value;
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].AsAt=SOURCE.asAt;
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].Name=SOURCE.name;
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].Code=SOURCE.code;
					SET OutputRoot.JSON.Data.AnchorLimits.Item[i].ID=SOURCE.id;
					SET i=i+1;
				END FOR;
			ELSE
				SET OutputRoot.JSON.Data.ResponseCode		=	'2001';
				SET OutputRoot.JSON.Data.ResponseMessage	=	'Invalid Anchor ID';
			END IF;	
		ELSE
			SET OutputRoot.JSON.Data.ResponseCode		=	'2001';
			SET OutputRoot.JSON.Data.ResponseMessage	=	COALESCE(Environment.Variables.GetLimitResp.JSON.Data.message,'Invalid Entity ID');
			SET OutputRoot.JSON.Data.ReferenceId		=	Environment.Variables.Logging.ReferenceId;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
