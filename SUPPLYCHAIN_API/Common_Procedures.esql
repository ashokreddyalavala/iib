
CREATE PROCEDURE GetLimitRequest (IN IM REFERENCE, INOUT OM REFERENCE )
BEGIN
		CREATE LASTCHILD OF OM DOMAIN 'JSON';
		SET OM.JSON.Data.version		=	'13.4.2-inner';
		SET OM.JSON.Data.tenantId		=	'T24/test';
		SET OM.JSON.Data.sessionToken	=	'46738758-AA23-44EE-4576-273563527634';
		SET OM.JSON.Data.type			=	'QUERY_ENTITY_LOAN_LIMITS';
		--SET OM.JSON.Data.accountNumber	=	COALESCE(IM.JSON.Data.AccountNumber,IM.JSON.Data.EntityId);
		SET OM.JSON.Data.entityId		=	COALESCE(IM.JSON.Data.EntityId,'');
		SET OM.JSON.Data.anchorId		=	COALESCE(IM.JSON.Data.AnchorId,'');
END;

CREATE PROCEDURE CreateDirectorAccountRequest (INOUT REQ REFERENCE, INOUT OM REFERENCE )
BEGIN
				CREATE LASTCHILD OF OM DOMAIN 'XMLNSC';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.CompanyCode ='KE0010001';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.GtsControl  = '';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.MessageId   = '';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.NoOfAuth    = '';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.Operation   = 'PROCESS';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.Replace	 = '';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.UserName	 = 'AGENCY01';
				
				
				--SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.RequestCommon.CompanyCode = COALESCE(REQ.CompanyCode,'');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.DateofBirth                   					= REQ.DateOfBirth;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gCOUNTRY.Country				 					= COALESCE(REQ.Country);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.Gender 											= COALESCE(REQ.Gender);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.LegalDocName					= COALESCE(REQ.IdType,'');  --id type; -
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.LegalIDNo 	 					= COALESCE(REQ.IdNumber); --id number
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.IssuingAuthority 				= COALESCE(REQ.IssueAuthority); --issuing authority.		
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gPOSTCODE.PostCode 								= COALESCE(REQ.PostalCode); -- postal code		
				DECLARE physicalAddress CHARACTER COALESCE(REQ.PSAddress,''); 		
				DECLARE i,j INTEGER 1;
				 IF LENGTH(physicalAddress)>35 THEN
				 	WHILE j>0 DO
				 		IF LENGTH(SUBSTRING(physicalAddress FROM j FOR 35)) > 0 THEN
				 			SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLLADDRESS.mLLADDRESS[i].sgLLADDRESS.PhysicalAddress = SUBSTRING(physicalAddress FROM j FOR 35);		 		
				 			SET j = j+35;
				 		ELSE 
				 			SET j = 0;
				 		END IF;
				 		SET i = i+1;
				 	END WHILE;		 	
				 ELSE
				 	SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLLADDRESS.mLLADDRESS.sgLLADDRESS.PhysicalAddress = physicalAddress; --physical address
				 END IF;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gNAME1.FullName 									= SUBSTRING(COALESCE(REQ.Name) FROM 1 FOR 35);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.IBEmail											= COALESCE(REQ.Email);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gPHONE1.mPHONE1.EmailAddress 					= COALESCE(REQ.Email);		
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.IBMobile											= COALESCE(REQ.MobileNo);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gPHONE1.mPHONE1.MobilePhoneNumbers				= COALESCE(REQ.MobileNo);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gPHONE1.mPHONE1.SMSAlertNo                       = COALESCE(REQ.MobileNo);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.Nationality 										= COALESCE(REQ.Nationality);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.Residence 										= COALESCE(REQ.Residence);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.Industry 										= COALESCE(REQ.Industry);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.IssueDate 						= REPLACE(COALESCE(REQ.IdIssueDate),'-','');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.ExpiryDate 					= REPLACE(COALESCE(REQ.IdExpiryDate),'-','');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gTAXID.TaxPin 									= COALESCE(REQ.TaxPin,'');		  
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gSHORTNAME.ShortName 							= SUBSTRING(COALESCE(REQ.Name) FROM 1 FOR 35);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gLEGALID.mLEGALID.LegalName                      = COALESCE(REQ.Name);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.CustomerMnemonic     						    = SUBSTRING(REQ.IdType FROM 1 FOR 1)||COALESCE(REQ.IdNumber);
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.Introducer	=	COALESCE(REQ.SalesConsultant,'');

				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gSTREET.PostalAddress 							     = COALESCE(REQ.PostalAddress); -- postal address
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.AMLFlag 											     = COALESCE(REQ.AMLFlag); 	
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gEMPLOYMENTSTATUS.mEMPLOYMENTSTATUS.CustomerCurrency  = COALESCE(REQ.CustomerCurrency,'');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gEMPLOYMENTSTATUS.mEMPLOYMENTSTATUS.Occupation        = COALESCE(REQ.Occupation,'');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gEMPLOYMENTSTATUS.mEMPLOYMENTSTATUS.Salary            = COALESCE(REQ.Salary,'');
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.gTOWNCOUNTRY.TownCity                                 = COALESCE(REQ.TownCity,''); 
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gONB.IMAGE.TYPE"."mONB.IMAGE.TYPE"[1].ImageType      = 'PHOTOS';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gONB.IMAGE.TYPE"."mONB.IMAGE.TYPE"[1].ImageName      = REQ.ImagePhoto;		
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gONB.IMAGE.TYPE"."mONB.IMAGE.TYPE"[2].ImageType      = 'SIGNATURES';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gONB.IMAGE.TYPE"."mONB.IMAGE.TYPE"[2].ImageName      = REQ.ImageSignature;
		
				IF REQ.FatcaFlag = 'Y'  THEN
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.FatcaFlag									      = COALESCE(REQ.FatcaFlag,'');
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.FNRStatus 										  = 'R';
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.FNRClassification 								  = 'R';
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.MailingAddress                                     = SUBSTRING(COALESCE(REQ.PSAddress,'') FROM 1 FOR 35); 
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gCITZ.ALL"."mCITZ.ALL"[1].CountriesofCitznship    = COALESCE(REQ.Nationaity);
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gTAX.RES.ALL"[1].CountriesofTaxResidence[1]       = COALESCE(REQ.Residence);
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gPRY.ADDR".PrimaryAddress                         = SUBSTRING(COALESCE(REQ.PSAddress,'') FROM 1 FOR 35);
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.CountryofBirth = '';
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gCITZ.ALL"."mCITZ.ALL"[1].TinId                   = COALESCE(REQ.TinId,'');
				ELSEIF REQ.FatcaFlag = 'N'  THEN
					SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.FatcaFlag										  = COALESCE(REQ.FatcaFlag,'');
				END IF;
				--SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.OnbChannel	=	'DIGITAL';
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.PEPStatus	=	REQ.pep;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINEMAIL	=	REQ.NextKinEmail;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINIDNUM	=	REQ.NextKinIdNumber;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINIDTYP	=	REQ.NextKinIdType;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINNAME		=	REQ.NextKinName;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINPHONE	=	REQ.NextKinPhone;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL."gNEXT.KIN.TYPE"."mNEXT.KIN.TYPE".NEXTKINTYPE		=	REQ.NextKinType;
				SET OM.XMLNSC.req:CUSTOMERONBOARDINGPERSONALRequest.CUSTOMERONBOARDINGPERSONAL.EntityID	=REQ.EntityId;	
END;

CREATE PROCEDURE decryptBase64 (IN jksFilePath CHARACTER,IN encrypted CHARACTER, IN aliasName CHARACTER,IN storePw CHARACTER,IN PrivateKeyPwd CHARACTER ) RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.stanbic.TestEncDecClean.decryptBase64";

CREATE PROCEDURE encryptBase64 (IN jksFilePath CHARACTER,IN toEncrypt CHARACTER, IN aliasName CHARACTER,IN storePw CHARACTER ) RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.stanbic.TestEncDecClean.encryptBase64";

--CREATE PROCEDURE decrypttoken (IN data CHARACTER ) RETURNS CHARACTER
--LANGUAGE JAVA
--EXTERNAL NAME "com.iib.stanbic.DESEncryption.decrypt";
--
CREATE PROCEDURE decryptToken (IN data CHARACTER ) RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.stanbic.TestEncDecClean.decryptToken";

CREATE PROCEDURE encryptToken (IN data CHARACTER ) RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.stanbic.TestEncDecClean.encryptToken";
