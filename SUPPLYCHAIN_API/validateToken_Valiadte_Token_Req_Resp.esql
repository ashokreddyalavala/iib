

CREATE COMPUTE MODULE validateTokenDatalake_Valiadte_Token_Req_Resp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		 DECLARE IPAddress,Token CHARACTER;
--		 SET IPAddress=COALESCE(InputRoot.HTTPInputHeader."X-Remote-Addr");
		 SET IPAddress=COALESCE(InputRoot.JSON.Data.SourceIp,'');--FromInput Message
		 SET Token	=	COALESCE(InputRoot.JSON.Data.Token,'');--from input
		 IF Token='' THEN
		 	THROW USER EXCEPTION CATALOG 'BIPmsgs' MESSAGE 3001 VALUES('Please provide the Authtoken') ;
		 END IF;
		 IF COALESCE(TOKENDETAILS.{InputRoot.HTTPInputHeader."X-Forwarded-For"}.TokenTimestamp,CURRENT_TIMESTAMP)=CURRENT_TIMESTAMP THEN
		 	THROW USER EXCEPTION CATALOG 'BIPmsgs' MESSAGE 3001 VALUES('Invalid/Expired Token ') ;
		 END IF;
		 IF TOKENDETAILS.{InputRoot.HTTPInputHeader."X-Forwarded-For"}.TokenTimestamp+INTERVAL '50' MINUTE < CURRENT_TIMESTAMP THEN
		 	THROW USER EXCEPTION CATALOG 'BIPmsgs' MESSAGE 3001 VALUES('Token Expired') ;
		 ELSE
		 	IF TOKENDETAILS.{InputRoot.HTTPInputHeader."X-Forwarded-For"}.Token<>Token THEN
		 		THROW USER EXCEPTION CATALOG 'BIPmsgs' MESSAGE 3001 VALUES('Invalid Token') ;
		 	END IF;
		 	
		 END IF;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.Data.ResponseCode		=	'00';
		SET OutputRoot.JSON.Data.ResponseMessage	=	'Success';
		SET OutputRoot.JSON.Data.ReferenceId		=	InputRoot.JSON.Data.ReferenceId;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
