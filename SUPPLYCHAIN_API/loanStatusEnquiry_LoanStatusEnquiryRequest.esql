

CREATE COMPUTE MODULE loanStatusEnquiry_LoanStatusEnquiryRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET Environment.Variables.Logging.LogType='LogDebug';
		SET Environment.Variables.Logging.ReferenceId=InputRoot.JSON.Data.ReferenceId;
		SET Environment.Variables.Logging.Channel=InputRoot.JSON.Data.Channel;
		SET Environment.Variables.Logging.Operation=InputLocalEnvironment.REST.Input.Operation;
		SET Environment.Variables.Logging.BackendSystem='DataLake';
		
		DECLARE IM REFERENCE TO InputRoot;
		DECLARE OM REFERENCE TO OutputRoot;
		CALL GetLimitRequest(IM,OM);
		PROPAGATE TO TERMINAL 'out1';
		IF Environment.TerminateFlow=TRUE THEN
			RETURN FALSE;
		END IF;
		
		SET Environment.Variables.Logging.BackendSystem='T24';
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.CompanyCode	=	'KE0010001';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.GtsControl	=	'';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.MessageId	=	'';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.NoOfAuth	=	'';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.Operation	=	'PROCESS';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.Replace	=	'';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.RequestCommon.UserName	=	'AGENCY01';

		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.EnquiryInput.EnquiryCriteriaCollection.EnquiryCriteria.Field		=	'CUSTOMER.ID';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.EnquiryInput.EnquiryCriteriaCollection.EnquiryCriteria.Operator	=	'EQ';
		SET OutputRoot.XMLNSC.req:SBKSUPPFINDETAILSRequest.EnquiryInput.EnquiryCriteriaCollection.EnquiryCriteria.Value		=	InputRoot.JSON.Data.EntityId; --Customer number 1339373
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
